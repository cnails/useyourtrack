import { Typography, Row, Col, Input, Form, Checkbox, Button, Card, message, Select } from 'antd';
import { CommonCard } from './CommonCard';
import CardNumberInput, { validateCardNumber } from './InputMask';
import { useState } from 'react';
import CrossIcon from '../Icons/cross.svg?react';
import { useGetTgUser, useGetWithdrawInfo } from '../api';

const { Title, Paragraph } = Typography;
const { Option } = Select;

export const RevenuePage = () => {
    const [checked, setChecked] = useState(false);
    const [isInvalidCheckbox, setIsInvalidCheckbox] = useState(false);
    const [isCustomCardExpanded, setIsCustomCardExpanded] = useState(false);
    const [cardNumber, setCardNumber] = useState('');
    const [bankName, setBankName] = useState<string | undefined>('–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫');

    const {data: userData} = useGetTgUser();
    const {data: withdrawData} = useGetWithdrawInfo();

    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
      setChecked(e.target.checked);
      setIsInvalidCheckbox(false);
    };
  
    const handleSubmit = () => {
        const cleanedCardNumber = cardNumber.replace(/\D/g, '');

        if (!validateCardNumber(cleanedCardNumber)) {
            message.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã.');
        } else if (bankName.length <= 3) {
            message.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞.');
        } else if (!checked) {
            setIsInvalidCheckbox(true);
        } else {
            setIsCustomCardExpanded(true);
        }
    };

    return (
    <div className="referral-page-container">
        <Title level={2} className="rules-title">–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</Title>
        <Paragraph className="revenue-description">
            –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ä—É–±–ª–µ–≤—ã–π –±–∞–ª–∞–Ω—Å –æ—Ç 400‚ÇΩ
        </Paragraph>
        
        <Row gutter={16}>
            <Col span={24}>
            <CommonCard className="prize">
                <span className="lifehack-icon">üöÄ</span>
                <div style={{textAlign: 'center', paddingTop: '14px', fontSize: '13px', fontWeight: 300}}>
                    –ú–æ–Ω–µ—Ç—ã umt –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ—Å–ª–µ –ª–∏—Å—Ç–∏–Ω–≥–∞. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –Ω–∞—à–µ–º
                    <a href="https://t.me/UseMyTrackEarnBot"> –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –¢–ì-–∫–∞–Ω–∞–ª–µ.</a>
                </div>
            </CommonCard>
            </Col>
        </Row>
        <Row gutter={16} className="tiles-container" style={{paddingTop: '24px'}}>
            <Col span={24}>
            <div style={{textAlign: 'center'}}>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä—É–±–ª—è—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞ –∫–∞—Ä—Ç—É –ª—é–±–æ–≥–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –±–∞–Ω–∫–∞.<br/>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤.</div>
            <div style={{textAlign: 'center', color: '#8AFF43', fontWeight: 700, paddingTop: '14px'}}>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥</div>
            </Col>
        </Row>
        <Row gutter={16}>
            <Col span={24}>
                <CommonCard className="referralButton">
                    <CardNumberInput onChangeCardNumber={setCardNumber} />
                </CommonCard>
            </Col>
            <Col span={24}>
                <CommonCard className="referralButton">
                <Select
                    className='bankSelect'
                    value={bankName}
                    onChange={setBankName}
                    allowClear={false}  // –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—á–∏—Å—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    >
                    {withdrawData?.available_banks.map((availableBankName) => (
                        <Option key={availableBankName} value={availableBankName}>{availableBankName}</Option>
                    ))}
                </Select>
                {/* <Input
                    placeholder="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞"
                    className='resetInputStyles'
                    onChange={(e) => setBankName(e.target.value)}
                /> */}
                </CommonCard>
            </Col>
        </Row>
        <Form onFinish={handleSubmit} style={{paddingTop: '15px'}}>
            <Form.Item style={{marginBottom: '15px'}}>
                <Checkbox checked={checked} onChange={handleChange} className={`custom-checkbox ${isInvalidCheckbox ? 'invalid-checkbox' : ''}`}>
                    <span style={{fontSize: '13px', color: 'white', opacity: '0.5'}}>—Å–æ–≥–ª–∞—Å–µ–Ω —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</span>
                </Checkbox>
            </Form.Item>

            <Form.Item>
                <Button type="primary" htmlType="submit" className='mainButton'>
                    –í—ã–≤–µ—Å—Ç–∏
                </Button>
            </Form.Item>
        </Form>
        {isCustomCardExpanded && (
            <>
                <div style={{position: 'absolute', top: '0', left: '0', width: '100%', height: '100%', backgroundColor: 'rgba(0, 0, 0, 0.5)'}} />
                {/* 66px - –≤—ã—Å–æ—Ç–∞ –º–µ–Ω—é */}
                <div className='revenueExpandedCard expandedCard'>
                    <Card className="custom-card" style={{'--color-1': '#46FF40', '--color-2': '#12940E'}}>
                        <div style={{width: '100%', display: 'flex', justifyContent: 'end', margin: '-45px 0 8px 0'}}>
                            <CrossIcon onClick={() => setIsCustomCardExpanded(false)} />
                        </div>
                        <div style={{fontSize: '38px'}}>{userData?.balance_rub! >= 400 ? 'üîé' : '‚ùå'}</div>
                        <div style={{color: '#fff', fontSize: '30px', fontWeight: '600', paddingTop: '10px'}}>{userData?.balance_rub! >= 400 ? '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É' : '–í—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ç 400‚ÇΩ'}</div>
                        <Button type="primary" htmlType="submit" className='mainButton revenueExpandedButton' onClick={() => setIsCustomCardExpanded(false)}>
                            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                        </Button>
                    </Card>
                </div>
            </>
        )}
    </div>
  );
};
